{"version":3,"sources":["images/header__logo.svg","contexts/AppContext.js","components/NavBar.js","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Preloader.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmationPopup.js","components/ImagePopup.js","utils/utils.js","utils/api.js","images/profile__avatar.svg","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/InfoTooltip.js","images/success.svg","images/error.svg","utils/constants.js","components/App.js","index.js"],"names":["AppContext","React","createContext","NavBar","isNavOpened","onClickNav","value","useContext","loggedIn","className","to","activeClassName","type","onClick","userEmail","signOut","Header","src","logo","alt","CurrentUserContext","Card","props","currentUser","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onCardDelete","link","name","onCardClick","onCardLike","length","Preloader","Main","cards","isLoadingCards","isLoadingUserInfo","onEditAvatar","onEditProfile","onAddPlace","avatar","about","map","Footer","Date","getFullYear","PopupWithForm","isOpened","e","target","classList","contains","onClose","action","onSubmit","noValidate","statusImage","title","children","EditProfilePopup","isOpen","onUpdateUser","isLoadingButtonText","useState","setName","description","setDescription","useEffect","evt","preventDefault","id","onChange","placeholder","required","minLength","maxLength","autoComplete","EditAvatarPopup","onUpdateAvatar","inputAvatar","useRef","current","ref","AddPlacePopup","setLink","ConfirmationPopup","ImagePopup","aria-label","handleOriginalResponse","res","ok","json","Promise","reject","status","api","options","this","baseUrl","headers","fetch","then","userInfo","method","body","JSON","stringify","cardInfo","cardId","setLike","avatarLink","authorization","auth","register","password","email","data","catch","err","console","log","authorize","token","localStorage","setItem","getContent","Login","handleLogin","userData","setUserData","handleChange","Register","handleRegister","ProtectedRoute","Component","component","InfoTooltip","statusMessage","statusSuccessMessage","statusErrors","errors","message","App","callback","deps","history","useHistory","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","selectedCard","setSelectedCard","deletedCard","setDeletedCard","avatarDefault","setCurrentUser","setCards","setLoggedIn","image","statusSuccessImage","infoTooltip","setInfoTooltip","setIsNavOpened","setUserEmail","setIsLoadingCards","setIsLoadingUserInfo","setIsLoadingButtonText","closeAllPopups","useCallback","push","handleError","form","statusError","statusErrorMessage","filter","error","statusErrorImage","tokenCheck","getItem","getInitialCards","initialCards","handleEscClose","key","document","addEventListener","removeEventListener","getUserInfo","Provider","removeItem","path","exact","changeLikeCardStatus","newCard","newCards","c","editProfile","addCard","deleteCard","updateAvatar","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53509337.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header__logo.fb123762.svg\";","import React from 'react';\n\nexport const AppContext = React.createContext();","import {useContext} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {AppContext} from '../contexts/AppContext';\n\nfunction NavBar({isNavOpened, onClickNav}) {\n  const value = useContext(AppContext);\n\n  function handleClick() {\n    onClickNav(!isNavOpened);\n  }\n\n  return (\n    <>\n      {/* Меню неавторизованный пользователь */}\n      {!value.loggedIn &&\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"./sign-in\"\n                                             activeClassName=\"nav__link_active\">Войти</NavLink></li>\n          <li className=\"nav__item\"><NavLink className=\"nav__link\" to=\"./sign-up\"\n                                             activeClassName=\"nav__link_active\">Регистрация</NavLink></li>\n        </ul>\n      </nav>\n      }\n      {/* Меню авторизованный пользователь */}\n      {value.loggedIn &&\n      <nav className=\"nav\">\n        <button type=\"button\" className={`button button_type_open-nav ${isNavOpened && 'button_type_close-nav'}`}\n  onClick={handleClick}/>\n        <ul className=\"nav__list nav__list_authorized\">\n          <li className=\"nav__item nav__item_margin_right\">{value.userEmail}</li>\n          <li className=\"nav__item\">\n            <button type=\"button\" className=\"button button_type_logout\" onClick={value.signOut}>Выйти</button>\n          </li>\n        </ul>\n      </nav>\n      }\n      {/* Меню мобильная версия */}\n      {value.loggedIn &&\n      <nav className={`nav nav_type_mobile ${isNavOpened && 'nav_opened'}`}>\n        <ul className=\"nav__list nav__list_type_mobile\">\n          <li className=\"nav__item nav__item_type_mobile\">{value.userEmail}</li>\n          <li className=\"nav__item\">\n            <button type=\"button\" className=\"button button_type_logout\" onClick={value.signOut}>Выйти</button>\n          </li>\n        </ul>\n      </nav>\n      }\n\n    </>\n  );\n}\n\nexport default NavBar;","import logo from './../images/header__logo.svg';\nimport NavBar from './NavBar';\n\nfunction Header({isNavOpened, onClickNav}) {\n  return (\n    <header className={`header ${isNavOpened && 'header_margin_top'}`}>\n      <img src={logo} alt=\"Место в России\" className=\"header__logo\"/>\n      <NavBar\n        onClickNav={onClickNav}\n        isNavOpened={isNavOpened}\n      />\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import {useContext} from 'react';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `button ${isOwn ? 'button_type_remove-card' : 'button_type_remove-card-hidden'}`\n  );\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = (\n    `button ${isLiked ? 'button_type_add-like-active' : 'button_type_add-like'}`\n  );\n\n  function handleImageClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <li className=\"card\">\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}/>\n      <img src={props.card.link} alt={props.card.name} className=\"card__image\" onClick={handleImageClick}/>\n      <div className=\"card__info\">\n        <h2 className=\"card__name\">{props.card.name}</h2>\n        <div className=\"card__like\">\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}/>\n          <span className=\"card__like-count\">{props.card.likes.length ? props.card.likes.length : ''}</span>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;","export default function Preloader({className}) {\n  return (\n    <div className={className}>\n      <div/>\n      <div/>\n    </div>\n  )\n}","import {useContext} from 'react';\nimport Card from './Card';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport Preloader from \"./Preloader\";\n\nfunction Main({\n                cards,\n                isLoadingCards,\n                isLoadingUserInfo,\n                onEditAvatar,\n                onEditProfile,\n                onAddPlace,\n                onCardClick,\n                onCardLike,\n                onCardDelete\n              }) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__about\">\n          <div className=\"profile__avatar\" onClick={onEditAvatar}>\n            <img src={currentUser.avatar} alt={currentUser.name} className=\"profile__avatar-img\"/>\n          </div>\n          <div className=\"profile__description\">\n            <div\n              className={`preloader preloader_type_text preloader_type_text-long ${!isLoadingUserInfo && 'preloader_hidden'}`}/>\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <button type=\"button\" className=\"button button_type_edit-profile\" onClick={onEditProfile}/>\n            <div\n              className={`preloader preloader_type_text preloader_type_text-short ${!isLoadingUserInfo && 'preloader_hidden'}`}/>\n            <p className=\"profile__job\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button type=\"button\" className=\"button button_type_add-card\" onClick={onAddPlace}/>\n      </section>\n\n      <section className=\"elements\">\n        {/*Индикатор загрузки карточек*/}\n        {isLoadingCards && <Preloader className={`preloader preloader_type_image lds-ripple`}/>}\n\n        <ul className=\"cards\">\n          {cards.map(card => (\n            <Card key={card._id} card={card} onCardClick={onCardClick} onCardLike={onCardLike}\n                  onCardDelete={onCardDelete}/>\n          ))}\n        </ul>\n      </section>\n    </main>\n  )\n}\n\nexport default Main;","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text\">&#169; {new Date().getFullYear()} Mesto by Kamenev Nikolay</p>\n    </footer>\n  )\n}\n\nexport default Footer;","function PopupWithForm(props) {\n  return (\n    <div className={`popup ${props.isOpened && 'popup_opened'} popup_type_${props.name}`} onClick={(e) => {\n      if (e.target.classList.contains('popup')) props.onClose()\n    }}>\n      <div className=\"popup__container\">\n        <button type=\"button\" className=\"button button_type_close-popup\" onClick={props.onClose}/>\n        <form action=\"#\" name={`${props.name}`} className=\"form\" onSubmit={props.onSubmit} noValidate>\n          {props.statusImage &&\n          <img src={props.statusImage} alt=\"Статус запроса\" className=\"popup__image popup__image_type_status\"/>}\n          <h2 className={`popup__heading`}>{props.title}</h2>\n          {props.children}\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default PopupWithForm;","import {useState, useEffect, useContext} from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser, isLoadingButtonText}) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState(currentUser.name);\n  const [description, setDescription] = useState(currentUser.about);\n\n  function handleChangeName(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleChangeDescription(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      isOpened={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name=\"edit-profile\"\n      title=\"Редактировать профиль\"\n    >\n      <label className=\"form__field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"profile-name-input\"\n          value={name}\n          onChange={handleChangeName}\n          placeholder=\"Имя\"\n          className=\"form__input form__input_el_profile-name\"\n          required\n          minLength=\"2\"\n          maxLength=\"40\"\n          autoComplete=\"off\"/>\n        <span className=\"form__input-error profile-name-input-error\"/>\n      </label>\n      <label className=\"form__field\">\n        <input\n          type=\"text\"\n          name=\"description\"\n          id=\"profile-job-input\"\n          value={description}\n          onChange={handleChangeDescription}\n          placeholder=\"Вид деятельности\"\n          className=\"form__input form__input_el_profile-job\"\n          required\n          minLength=\"2\"\n          maxLength=\"200\"\n          autoComplete=\"off\"/>\n        <span className=\"form__input-error profile-job-input-error\"/>\n      </label>\n      <button type=\"submit\"\n              className=\"button button_type_submit\">{isLoadingButtonText ? 'Cохранение...' : 'Сохранить'}</button>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;","import {useRef} from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, isLoadingButtonText}) {\n  const inputAvatar = useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateAvatar({\n      avatar: inputAvatar.current.value\n    });\n    inputAvatar.current.value = '';\n  }\n\n  return (\n    <PopupWithForm\n      isOpened={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name=\"update-avatar\"\n      title=\"Обновить аватар\"\n    >\n      <label className=\"form__field\">\n        <input\n          type=\"url\"\n          name=\"avatar-link\"\n          id=\"avatar-link-input\"\n          ref={inputAvatar}\n          className=\"form__input form__input_size_small form__input_el_avatar-link\"\n          placeholder=\"Ссылка на изображение\"\n          required\n          autoComplete=\"off\"/>\n        <span className=\"form__input-error avatar-link-input-error\"/>\n      </label>\n      <button type=\"submit\"\n              className=\"button button_type_submit\">{isLoadingButtonText ? 'Сохранение...' : 'Сохранить'}</button>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;","import {useState} from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace, isLoadingButtonText}) {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  function handleCardNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleCardLinkChange(evt) {\n    setLink(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddPlace({\n      name,\n      link\n    });\n    setName('');\n    setLink('');\n  }\n\n  return (\n    <PopupWithForm\n      isOpened={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name=\"add-card\"\n      title=\"Новое место\"\n    >\n      <label className=\"form__field\">\n        <input\n          type=\"text\"\n          name=\"card-name\"\n          id=\"card-name-input\"\n          value={name}\n          onChange={handleCardNameChange}\n          className=\"form__input form__input_size_small form__input_el_card-name\"\n          placeholder=\"Название\"\n          required\n          minLength=\"2\"\n          maxLength=\"30\"\n          autoComplete=\"off\"/>\n        <span className=\"form__input-error card-name-input-error\"/>\n      </label>\n      <label className=\"form__field\">\n        <input\n          type=\"url\"\n          name=\"card-link\"\n          id=\"card-link-input\"\n          value={link}\n          onChange={handleCardLinkChange}\n          className=\"form__input form__input_size_small form__input_el_card-link\"\n          placeholder=\"Ссылка на картинку\"\n          required\n          autoComplete=\"off\"/>\n        <span className=\"form__input-error card-link-input-error\"/>\n      </label>\n      <button type=\"submit\"\n              className=\"button button_type_submit\">{isLoadingButtonText ? 'Сохранение...' : 'Создать'}</button>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;","import PopupWithForm from './PopupWithForm';\n\nfunction ConfirmationPopup({card, isOpen, onClose, onCardDelete, isLoadingButtonText}) {\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onCardDelete(card._id);\n  }\n\n  return (\n    <PopupWithForm\n      isOpened={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      name=\"delete-card\"\n      title=\"Вы уверены?\"\n    >\n      <button type=\"submit\" className=\"button button_type_submit\">{isLoadingButtonText ? 'Удаление...' : 'Да'}</button>\n    </PopupWithForm>\n  )\n}\n\nexport default ConfirmationPopup;","function ImagePopup(props) {\n  return (\n    <>\n      <div className={`popup popup_type_show-card ${props.card && 'popup_opened'}`} onClick={(e) => {\n        if (e.target.classList.contains('popup')) props.onClose()\n      }}>\n        <div className=\"popup__container popup__container_size_large\">\n          <button type=\"button\" aria-label=\"Закрыть\" className=\"button button_type_close-popup\" onClick={props.onClose}/>\n          <figure className=\"popup__figure\">\n            <img src={props.card && props.card.link} alt={props.card && props.card.name} className=\"popup__image\"/>\n            <figcaption className=\"popup__caption\">{props.card && props.card.name}</figcaption>\n          </figure>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ImagePopup;","const handleOriginalResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n}\n\nexport default handleOriginalResponse;","import handleOriginalResponse from './utils.js';\n\nclass Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers\n    })\n      .then(handleOriginalResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards/`, {\n      headers: this.headers\n    })\n      .then(handleOriginalResponse);\n  }\n\n  editProfile(userInfo) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: userInfo.name,\n        about: userInfo.about\n      })\n    })\n      .then(handleOriginalResponse);\n  }\n\n  addCard(cardInfo) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: cardInfo.name,\n        link: cardInfo.link\n      })\n    })\n      .then(handleOriginalResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n      .then(handleOriginalResponse);\n    ;\n  }\n\n  changeLikeCardStatus(cardId, setLike) {\n    if (setLike) {\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: this.headers,\n      })\n        .then(handleOriginalResponse);\n    } else {\n      return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: this.headers,\n      })\n        .then(handleOriginalResponse);\n    }\n  }\n\n  updateAvatar(avatarLink) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    })\n      .then(handleOriginalResponse);\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20',\n  headers: {\n    authorization: 'af47fd49-b31e-4449-b574-1e5cb0a80b14',\n    'Content-Type': 'application/json'\n  }\n});\n\nclass Auth {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n  }\n\n  register = (password, email) => {\n    return fetch(`${this.baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({password, email})\n    })\n      .then(handleOriginalResponse)\n      .then(data => {\n        if (data) {\n          return data;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return err;\n      });\n  }\n\n  authorize = (password, email) => {\n    return fetch(`${this.baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({password, email})\n    })\n      .then(handleOriginalResponse)\n      .then(data => {\n        if (data.token) {\n          localStorage.setItem('token', data.token);\n          return data;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        return err;\n      });\n  }\n\n  getContent = (token) => {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${token}`\n      },\n    })\n      .then(handleOriginalResponse)\n      .then(data => {\n        return data;\n      })\n      .catch((err) => {\n        console.log(err);\n        return err;\n      });\n  }\n}\n\nexport const auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co',\n})","export default __webpack_public_path__ + \"static/media/profile__avatar.64512549.svg\";","import {useState} from 'react';\n\nfunction Login({handleLogin}) {\n  const [userData, setUserData] = useState({\n    password: '',\n    email: ''\n  })\n\n  function handleChange(evt) {\n    const {name, value} = evt.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    })\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const {password, email} = userData;\n    if (!password || !email) {\n      return;\n    }\n    handleLogin(evt, password, email);\n  }\n\n  return (\n    <>\n      <div className=\"sign\">\n        <p className=\"sign__heading\">Вход</p>\n        <form\n          name=\"login-form\"\n          className=\"sign__form\"\n          onSubmit={handleSubmit}>\n          <fieldset className=\"sign__fieldset\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={userData.email}\n              className=\"sign__input\"\n              onChange={handleChange}\n              placeholder=\"Email\"\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={userData.password}\n              className=\"sign__input\"\n              onChange={handleChange}\n              placeholder=\"Пароль\"\n            />\n          </fieldset>\n          <button type=\"submit\" className=\"sign__button\">Войти</button>\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default Login;","import {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nfunction Register({handleRegister}) {\n  const [userData, setUserData] = useState({\n    password: '',\n    email: ''\n  });\n\n  function handleChange(evt) {\n    const {name, value} = evt.target;\n    setUserData({\n      ...userData,\n      [name]: value\n    })\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const {password, email} = userData;\n    handleRegister(evt, password, email);\n  }\n\n  return (\n    <>\n      <div className=\"sign\">\n        <p className=\"sign__heading\">Регистрация</p>\n        <form\n          name=\"register-form\"\n          className=\"sign__form\"\n          onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={userData.email}\n            className=\"sign__input\"\n            onChange={handleChange}\n            placeholder=\"Email\"\n            required\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={userData.password}\n            className=\"sign__input\"\n            onChange={handleChange}\n            placeholder=\"Пароль\"\n            required\n          />\n          <button type=\"submit\" className=\"sign__button\">Зарегистрироваться</button>\n        </form>\n        <div className=\"sign__signin\">\n          <span>Уже зарегистрированы?</span>\n          <Link to=\"./sign-in\" className=\"sign__link\">Войти</Link>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Register;","import {useContext} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {AppContext} from '../contexts/AppContext';\n\nfunction ProtectedRoute({component: Component, ...props}) {\n  const value = useContext(AppContext);\n  return (\n    <Route>\n      {value.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\"/>}\n    </Route>\n  )\n}\n\nexport default ProtectedRoute;","import PopupWithForm from './PopupWithForm';\n\nfunction InfoTooltip({isOpen, onClose, statusImage, statusMessage}) {\n  return (\n    <PopupWithForm\n      isOpened={isOpen}\n      onClose={onClose}\n      name=\"sign-status\"\n      statusImage={statusImage}\n      title={statusMessage}\n    />\n  )\n}\n\nexport default InfoTooltip;","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/error.df8eddf6.svg\";","export const statusSuccessMessage = 'Вы успешно зарегистрировались!';\nexport const statusErrorText = 'Что-то пошло не так! Попробуйте еще раз.';\n\nexport const statusErrors = [\n  {\n    name: 'login-form',\n    errors: [\n      {\n        status: 400,\n        message: 'Не передано одно из полей.'\n      },\n      {\n        status: 401,\n        message: 'Пользователь не найден. Проверьте Email и Пароль.'\n      }\n    ]\n  },\n  {\n    name: 'register-form',\n    errors: [\n      {\n        status: 400,\n        message: 'Некорректно заполнено одно из полей. Попробуйте еще раз.'\n      }\n    ]\n  }\n];\n","import {useState, useEffect, useCallback} from 'react';\nimport {Route, Switch, Redirect, useHistory} from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmationPopup from './ConfirmationPopup';\nimport ImagePopup from './ImagePopup';\nimport {api, auth} from '../utils/api';\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\nimport {AppContext} from '../contexts/AppContext';\nimport avatarDefault from './../images/profile__avatar.svg';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport statusSuccessImage from './../images/success.svg';\nimport statusErrorImage from './../images/error.svg';\nimport {statusErrors, statusSuccessMessage} from '../utils/constants';\n\nfunction App(callback, deps) {\n  const history = useHistory();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);                       // Стейт попап редактирования профиля открыт\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);                             // Стейт попап добавить карточку открыт\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);                         // Стейт попап редактирования аватара открыт\n  const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);                     // Стейт попап подтверждения удаления карточки открыт\n  const [selectedCard, setSelectedCard] = useState(null);                                            // Стейт выбранная карточка для передачи картинки карточки в попап\n  const [deletedCard, setDeletedCard] = useState(null);                                              // Стейт выбранная карточка для удаления\n  const [currentUser, setCurrentUser] = useState({                                                   // Стейт данные текущего пользователя\n    name: '',\n    about: '',\n    email: '',\n    avatar: avatarDefault\n  });\n  const [cards, setCards] = useState([]);                                                            // Стейт массив карточек\n  const [loggedIn, setLoggedIn] = useState(false);                                                   // Стейт-переменная статус пользователя, вход в систему\n  const [infoTooltip, setInfoTooltip] = useState({                                                   // Стейт информационного попапа статуса\n    isOpen: false,\n    image: statusSuccessImage,\n    message: statusSuccessMessage\n  });\n  const [isNavOpened, setIsNavOpened] = useState(false);                                             // Стейт мобильная навигация открыта\n  const [userEmail, setUserEmail] = useState('');                                                    // Стейт email пользователя\n  const [isLoadingCards, setIsLoadingCards] = useState(true);                                        // Стейт прелоадер загрузки карточек\n  const [isLoadingUserInfo, setIsLoadingUserInfo] = useState(true);                                  // Стейт прелоадер загрузки информации пользователя\n  const [isLoadingButtonText, setIsLoadingButtonText] = useState(false);                             // Стейт надпись на кнопке при сохранении контента\n\n  // Обработчик клика по аватару\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  // Обработчик клика по кнопке редактирования профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  // Обработчик клика по кнопке добавить карточку\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  // Обработчик клика по кнопке удалить карточку\n  function handleCardDelete(card) {\n    setIsConfirmationPopupOpen(true);\n    setDeletedCard(card);\n  }\n\n  // Функция закрытия всех попапов\n  const closeAllPopups = useCallback(() => {\n    setInfoTooltip({\n      ...infoTooltip,\n      isOpen: false\n    });\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsConfirmationPopupOpen(false);\n    setSelectedCard(null);\n  }, [infoTooltip])\n\n  // Обработчик клика по картинке карточки\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // Обработчик обновления информации пользователя\n  function handleUpdateUser(userInfo) {\n    setIsLoadingButtonText(true);\n    api.editProfile(userInfo)\n      .then(data => {\n        setCurrentUser({...data});\n        closeAllPopups();\n        setIsLoadingButtonText(false);\n      })\n      .catch(err => console.log(err));\n  }\n\n  // Обработчик обновления аватара\n  function handleUpdateAvatar({avatar}) {\n    setIsLoadingButtonText(true);\n    api.updateAvatar(avatar)\n      .then(data => {\n        setCurrentUser({...data});\n        closeAllPopups();\n        setIsLoadingButtonText(false);\n      })\n      .catch(err => console.log(err));\n  }\n\n  // Обработчик лайка картинки\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then(newCard => {\n        const newCards = cards.map(c => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch(err => console.log(err));\n  }\n\n  // Обработчик подтверждения удаления карточки\n  function handleCardDeleteSubmit(cardId) {\n    setIsLoadingButtonText(true);\n    api.deleteCard(cardId)\n      .then(() => {\n        const newCards = cards.filter(c => c._id !== cardId);\n        setCards(newCards);\n        closeAllPopups();\n        setIsLoadingButtonText(false);\n      })\n      .catch(err => console.log(err));\n  }\n\n  // Обработчик добавления карточки\n  function handleAddPlaceSubmit(cardInfo) {\n    setIsLoadingButtonText(true);\n    api.addCard(cardInfo)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n        setIsLoadingButtonText(false);\n      })\n      .catch(err => console.log(err));\n  }\n\n  // Обработчик по кнопке Войти\n  function handleLogin(evt, password, email) {\n    auth.authorize(password, email)\n      .then(data => {\n        if (data.token) {\n          setLoggedIn(true);\n          setUserEmail(email);\n          history.push('/');\n        } else {\n          handleError(evt.target, data);\n        }\n      })\n      .catch(err => console.log(err));                                          // По указанным Логину и Паролю пользователь не найден. Проверьте введенные данные и повторите попытку. \n  }\n\n  // Обработчик по кнопке Зарегистрироваться\n  function handleRegister(evt, password, email) {\n    auth.register(password, email)\n      .then(res => {\n        if (res !== 400) {\n          setInfoTooltip({\n            ...infoTooltip,\n            isOpen: true,\n            image: statusSuccessImage,\n            message: statusSuccessMessage\n          });\n          history.push('./sign-in');\n        } else {\n          handleError(evt.target, res);\n        }\n      })\n      .catch(err => console.log(err));                                                                // Обработка ошибки handleError();\n  }\n\n  // Обработчик ошибки по кнопке Войти\n  function handleError(form, statusError) {\n    const errors = statusErrors.filter(error => error.name === form.name)[0].errors;\n    const statusErrorMessage = errors.filter(error => error.status === statusError)[0].message;\n    setInfoTooltip({\n      ...infoTooltip,\n      isOpen: true,\n      image: statusErrorImage,\n      message: statusErrorMessage\n    });\n  }\n\n  // Обработчик клика по меню\n  function handleNavClick() {\n    setIsNavOpened(!isNavOpened);\n  }\n\n  // Выход из аккаунта\n  function signOut() {\n    setLoggedIn(false);\n    setIsNavOpened(false);\n    localStorage.removeItem('token');\n    history.push('./sign-in');\n  }\n\n  // Проверка токена при повторном посещении сайта\n  const tokenCheck = useCallback(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      auth.getContent(token)\n        .then(res => {\n          if (res) {\n            setUserEmail(res.data.email);\n            setLoggedIn(true);\n            history.push('/');\n          }\n        })\n    } else {\n      setLoggedIn(false);\n    }\n  }, [history])\n\n  useEffect(() => {\n    tokenCheck();\n  }, [tokenCheck]);\n\n  // Загрузка карточек по умолчанию\n  useEffect(() => {\n    api.getInitialCards()\n      .then(initialCards => {\n        setCards(initialCards);\n        setIsLoadingCards(false);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  // Добавить/удалить слушателя нажатия Esc при открытии попапа\n  useEffect(() => {\n    function handleEscClose(evt) {\n      if (evt.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n\n    (isEditProfilePopupOpen\n      || infoTooltip.isOpen\n      || isAddPlacePopupOpen\n      || isEditAvatarPopupOpen\n      || isConfirmationPopupOpen\n      || selectedCard) && document.addEventListener('keydown', handleEscClose);\n\n    return () => {\n      document.removeEventListener('keydown', handleEscClose);\n    }\n  }, [infoTooltip.isOpen, isEditProfilePopupOpen, isAddPlacePopupOpen, isEditAvatarPopupOpen, isConfirmationPopupOpen, selectedCard, closeAllPopups]);\n\n  // Загрузка данных пользователя\n  useEffect(() => {\n    api.getUserInfo()\n      .then(data => {\n        setCurrentUser({...data});\n        setIsLoadingUserInfo(false);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <AppContext.Provider value={{loggedIn, userEmail, handleLogin, signOut}}>\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page__container\">\n          <Header\n            isNavOpened={isNavOpened}\n            onClickNav={handleNavClick}\n          />\n          <Switch>\n            <Route path=\"/sign-up\">\n              <Register\n                handleRegister={handleRegister}\n                handleError={handleError}\n              />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login\n                handleLogin={handleLogin}\n                handleError={handleError}\n              />\n            </Route>\n            <ProtectedRoute\n              exact path=\"/\"\n              component={Main}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              cards={cards}\n              isLoadingCards={isLoadingCards}\n              isLoadingUserInfo={isLoadingUserInfo}\n            >\n            </ProtectedRoute>\n            <Route path=\"/\">\n              <Redirect to=\"/\"/>\n            </Route>\n          </Switch>\n          {loggedIn && <Footer/>}\n          {/* <!-- Попап редактировать профиль --> */}\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n            isLoadingButtonText={isLoadingButtonText}\n          />\n          {/* <!-- Попап добавить карточку --> */}\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n            isLoadingButtonText={isLoadingButtonText}\n          />\n          {/* <!-- Попап картинка --> */}\n          <ImagePopup\n            onClose={closeAllPopups}\n            card={selectedCard}\n          />\n          {/* <!-- Попап удаления карточки --> */}\n          <ConfirmationPopup\n            isOpen={isConfirmationPopupOpen}\n            onClose={closeAllPopups}\n            onCardDelete={handleCardDeleteSubmit}\n            card={deletedCard}\n            isLoadingButtonText={isLoadingButtonText}\n          />\n\n          {/* <!-- Попап обновить аватар --> */}\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n            isLoadingButtonText={isLoadingButtonText}\n          />\n\n          {/* <!-- Попап статус подтверждение --> */}\n          <InfoTooltip\n            isOpen={infoTooltip.isOpen}\n            onClose={closeAllPopups}\n            statusImage={infoTooltip.image}\n            statusMessage={infoTooltip.message}\n          />\n        </div>\n      </CurrentUserContext.Provider>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}